function validateDob() {
  var dobPattern = /^(0[1-9]|1[0-2])\/(0[1-9]|[12][0-9]|3[01])\/\d{4}$/;

  $("#dob").on("keypress", function (e) {
    var charCode = e.which || e.keyCode;
    if ((charCode < 48 || charCode > 57) && charCode !== 47) {
      e.preventDefault();
    }
  });

  $("#dob").on("input", function () {
    var dobValue = $(this).val().replace(/[^0-9/]/g, "");
    var parts = dobValue.split("/");

    if (parts[0] && parts[0].length > 2) {
      parts[0] = parts[0].substring(0, 2);
    }

    if (parts.length > 1 && parts[1].length > 2) {
      parts[1] = parts[1].substring(0, 2);
    }

    var formattedDob = parts.join("/");

    if (formattedDob.length >= 7) {
      if (parts.length < 3) {
        formattedDob += "/";
      } else if (parts[2] && parts[2].length > 4) {
        parts[2] = parts[2].substring(0, 4);
      }
      formattedDob = parts.join("/");
    }

    $(this).val(formattedDob);
  });

  $("#dob").on("keyup", function () {
    var dobValue = $(this).val().trim();
    var dobError = $(".dob-error");

    if (dobValue === "" || !dobPattern.test(dobValue)) {
      dobError.text("Please enter a valid Date of Birth in MM/DD/YYYY format.");
      $("#btnSubmit").attr("disabled", true);
      return false;
    }

    var dobParts = dobValue.split("/");
    var month = parseInt(dobParts[0], 10);
    var day = parseInt(dobParts[1], 10);
    var year = parseInt(dobParts[2], 10);

    var today = new Date();
    var dobDate = new Date(year, month - 1, day);
    var minYear = today.getFullYear() - 200;

    if (month < 1 || month > 12) {
      dobError.text("Please enter a valid month (01-12).");
      $("#btnSubmit").attr("disabled", true);
      return false;
    }

    var maxDaysInMonth = new Date(year, month, 0).getDate();
    if (day < 1 || day > maxDaysInMonth) {
      dobError.text("Please enter a valid day for the specified month.");
      $("#btnSubmit").attr("disabled", true);
      return false;
    }

    if (dobDate > today) {
      dobError.text("Date of Birth cannot be in the future.");
      $("#btnSubmit").attr("disabled", true);
      return false;
    }
    if (year < minYear || dobDate.getFullYear() !== year || dobDate.getMonth() + 1 !== month || dobDate.getDate() !== day) {
      dobError.text("Please enter a realistic Date of Birth.");
      $("#btnSubmit").attr("disabled", true);
      return false;
    }
    dobError.text("");
    $("#btnSubmit").attr("disabled", false);
    return true;
  });
}

function validateEmailAddress() {
  var emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
  $("#email").on("keyup", function () {
    if ($(this).val().trim() === "" || !emailPattern.test($(this).val())) {
      $(".email-error").text(`Please enter a valid Email Address.`);
      $("#btnSubmit").attr("disabled", true);
      return false;
    }
    $(".email-error").text(``);
    $("#btnSubmit").attr("disabled", false);
    return true;
  });
  $("#email").on("blur", function () {
    var emailValue = $(this).val().trim();
    var emailError = $(".email-error");

    if (emailValue === "" || !emailPattern.test(emailValue)) {
      // emailError.text("Please enter a valid Email Address.");
      $(this).css("outline", "2px solid red");
      $("#btnSubmit").attr("disabled", true);
      return false;
    }

    emailError.text("");
    $(this).css("outline", "none");
    $("#btnSubmit").attr("disabled", false);
    return true;
  });
}

function validateNationIdNumber() {
  var idnoPattern = /^\d{5,30}$/;
  $("#idno").on("keyup", function () {
    if ($(this).val().trim() === "" || !idnoPattern.test($(this).val())) {
      $(".idno-error").text(`Please enter a valid National Identification Number (ID Number)`);
      $("#btnSubmit").attr("disabled", true);
      return false;
    }
    $(".idno-error").text("");
    $("#btnSubmit").attr("disabled", false);
    return true;
  });

  $("#idno").on("keypress", function (e) {
    var charCode = e.which || e.keyCode;
    if (charCode < 48 || charCode > 57) {
      e.preventDefault();
    }
  });

  $("#idno").on("paste", function (e) {
    var pastedData = e.originalEvent.clipboardData.getData("text/plain");
    if (isNaN(pastedData)) {
      e.preventDefault();
    }
  });
}

function validatePasswordField() {
  $("#password, #password2").on("keyup", function () {
    var password = $("#password").val().trim();
    var password2 = $("#password2").val().trim();
    var passwordError = $(".password-error");
    var password2Error = $(".password2-error");

    // Regular expression for special characters
    var specialCharPattern = /[!@#$%^&*(),.?":{}|<>]/;

    // Check if the password meets minimum length requirements
    if (password === "" || password.length < 6) {
      passwordError.text(`Password can't be empty and must be at least 6 characters long.`);
      $("#btnSubmit").attr("disabled", true);
      return false;
    }

    // Check if the password contains at least one special character
    if (!specialCharPattern.test(password)) {
      passwordError.text(`Password must contain at least one special character.`);
      $("#btnSubmit").attr("disabled", true);
      return false;
    }

    if (password !== password2) {
      password2Error.text("Passwords do not match.");
      $("#btnSubmit").attr("disabled", true);
      return false;
    }

    passwordError.text("");
    password2Error.text("");
    $("#btnSubmit").attr("disabled", false);
    return true;
  });
}

function validateTermsAndConditions() {
  const termsCheckbox = $("#TermsAndConditions");
  termsCheckbox.on("change", function () {
    if (!this.checked) {
      $(".terms-error").text("You must accept the privacy policy and terms and conditions.");
      $("#btnSubmit").attr("disabled", true);
      return false;
    }
    $(".terms-error").text("");
    $("#btnSubmit").attr("disabled", false);
    return true;
  });
}

function showLoadingState(target) {
  $(`#${target}`).html(`<div class="d-flex justify-content-center">
        <div class="spinner-border" role="status">
        <span class="visually-hidden">Loading...</span>
        </div>
    </div>`);
}

function removeLoadingState(target, text = "") {
  $(`#${target}`).html(text);
}

function handleFailedResponse(responseTest) {
  $("#response-card-container").fadeIn(3000, function () {
    $(this).addClass("response-card-error").html(`${responseTest}`);
  }).fadeOut(30000, function () {});
}

function handleSuccessResponse(responseText) {
  $("#response-card-container").fadeIn(3000, function () {
    $(this).addClass("response-card-success").html(`${responseText}`);
  }).fadeOut(30000, function () {});
}
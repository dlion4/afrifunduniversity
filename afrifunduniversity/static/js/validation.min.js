function validateDob() {
  var dobPattern = /^(0[1-9]|1[0-2])\/(0[1-9]|[12][0-9]|3[01])\/\d{4}$/;

  $("#dob").on("keyup", function () {
    var dobValue = $(this).val().trim();
    var dobError = $(".dob-error");

    if ($(this).val().trim() === "" || !dobPattern.test($(this).val())) {
      dobError.text("Please enter a valid Date of Birth in MM/DD/YYYY format.");
      $("#btnSubmit").attr("disabled", true);
      return false;
    }

    var dobParts = $(this).val().split("/");
    var month = parseInt(dobParts[0], 10);
    var day = parseInt(dobParts[1], 10);
    var year = parseInt(dobParts[2], 10);

    var dobDate = new Date(year, month - 1, day);
    var today = new Date();
    var minYear = today.getFullYear() - 200; // Maximum age: 200 years

    // Check if the entered date is a valid date, not a future date, and within the valid age range
    if (dobDate > today) {
      dobError.text("Date of Birth cannot be in the future.");
      $("#btnSubmit").attr("disabled", true);
      return false;
    }

    if (year < minYear || dobDate.getFullYear() !== year || dobDate.getMonth() + 1 !== month || dobDate.getDate() !== day) {
      dobError.text("Please enter a realistic Date of Birth.");
      $("#btnSubmit").attr("disabled", true);
      return false;
    }

    // Clear error if all conditions are met
    dobError.text("");
    $("#btnSubmit").attr("disabled", false);
    return true;
  });
}

function validateEmailAddress() {
  var emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
  $("#email").on("keyup", function () {
    if ($(this).val().trim() === "" || !emailPattern.test($(this).val())) {
      $(".email-error").text(`Please enter a valid Email Address.`);
      $("#btnSubmit").attr("disabled", true);
      return false;
    }
    $(".email-error").text(``);
    $("#btnSubmit").attr("disabled", false);
    return true;
  });
}

function validateNationIdNumber() {
  var idnoPattern = /^\d{5,30}$/; // Accepts numbers between 7 and 30 digits
  $("#idno").on("keyup", function () {
    if ($(this).val().trim() === "" || !idnoPattern.test($(this).val())) {
      $(".idno-error").text(`Please enter a valid National Identification Number (ID Number)`);
      $("#btnSubmit").attr("disabled", true);
      return false;
    }
    $(".idno-error").text("");
    $("#btnSubmit").attr("disabled", false);
    return true;
  });
}

function validatePasswordField() {
  $("#loginPasswordField").on("keyup", function () {
    if ($(this).val().trim() === "" || $(this).val().length < 6) {
      $(".loginPasswordField-error").text(`Password length can't be empty or less than 6 characters in length`);
      $("#btnSubmit").attr("disabled", true);
      return false;
    }
    $(".loginPasswordField-error").text("");
    $("#btnSubmit").attr("disabled", false);
    return true;
  });
}

function validateTermsAndConditions() {
  const termsCheckbox = $("#TermsAndConditions");

  termsCheckbox.on("change", function () {
    if (!this.checked) {
      $(".terms-error").text("You must accept the privacy policy and terms and conditions.");
      $("#btnSubmit").attr("disabled", true);
      return false;
    }
    $(".terms-error").text("");
    $("#btnSubmit").attr("disabled", false);
    return true;
  });
}

function showLoadingState(target) {
  $(`#${target}`).html(`<div class="d-flex justify-content-center">
                <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
                </div>
            </div>`);
}

function removeLoadingState(target, text = "") {
  $(`#${target}`).html(text);
}

function handleFailedResponse(responseTest) {
  $("#response-card-container").fadeIn(3000, function () {
    $(this).addClass("response-card-error").html(`${responseTest}`);
  }).fadeOut(30000, function () {});
}

function handleSuccessResponse(responseText) {
  $("#response-card-container").fadeIn(3000, function () {
    $(this).addClass("response-card-success").html(`${responseText}`);
  }).fadeOut(30000, function () {});
}